// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs3/ocmshareprovider/v0alpha/ocmshareprovider.proto

package ocmshareproviderv0alphapb

import (
	context "context"
	fmt "fmt"
	rpc "github.com/cs3org/go-cs3apis/cs3/rpc"
	v0alpha "github.com/cs3org/go-cs3apis/cs3/storageprovider/v0alpha"
	types "github.com/cs3org/go-cs3apis/cs3/types"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListOCMSharesRequest_Filter_Type int32

const (
	ListOCMSharesRequest_Filter_LIST_OCM_SHARES_REQUEST_FILTER_TYPE_INVALID          ListOCMSharesRequest_Filter_Type = 0
	ListOCMSharesRequest_Filter_LIST_OCM_SHARES_REQUEST_FILTER_TYPE_NO_FILTER        ListOCMSharesRequest_Filter_Type = 1
	ListOCMSharesRequest_Filter_LIST_OCM_SHARES_REQUEST_FILTER_TYPE_RESOURCE_ID      ListOCMSharesRequest_Filter_Type = 2
	ListOCMSharesRequest_Filter_LIST_OCM_SHARES_REQUEST_FILTER_TYPE_OWNER            ListOCMSharesRequest_Filter_Type = 3
	ListOCMSharesRequest_Filter_LIST_OCM_SHARES_REQUEST_FILTER_TYPE_CREATOR          ListOCMSharesRequest_Filter_Type = 4
	ListOCMSharesRequest_Filter_LIST_OCM_SHARES_REQUEST_FILTER_TYPE_OWNER_PROVIDER   ListOCMSharesRequest_Filter_Type = 5
	ListOCMSharesRequest_Filter_LIST_OCM_SHARES_REQUEST_FILTER_TYPE_CREATOR_PROVIDER ListOCMSharesRequest_Filter_Type = 6
)

var ListOCMSharesRequest_Filter_Type_name = map[int32]string{
	0: "LIST_OCM_SHARES_REQUEST_FILTER_TYPE_INVALID",
	1: "LIST_OCM_SHARES_REQUEST_FILTER_TYPE_NO_FILTER",
	2: "LIST_OCM_SHARES_REQUEST_FILTER_TYPE_RESOURCE_ID",
	3: "LIST_OCM_SHARES_REQUEST_FILTER_TYPE_OWNER",
	4: "LIST_OCM_SHARES_REQUEST_FILTER_TYPE_CREATOR",
	5: "LIST_OCM_SHARES_REQUEST_FILTER_TYPE_OWNER_PROVIDER",
	6: "LIST_OCM_SHARES_REQUEST_FILTER_TYPE_CREATOR_PROVIDER",
}

var ListOCMSharesRequest_Filter_Type_value = map[string]int32{
	"LIST_OCM_SHARES_REQUEST_FILTER_TYPE_INVALID":          0,
	"LIST_OCM_SHARES_REQUEST_FILTER_TYPE_NO_FILTER":        1,
	"LIST_OCM_SHARES_REQUEST_FILTER_TYPE_RESOURCE_ID":      2,
	"LIST_OCM_SHARES_REQUEST_FILTER_TYPE_OWNER":            3,
	"LIST_OCM_SHARES_REQUEST_FILTER_TYPE_CREATOR":          4,
	"LIST_OCM_SHARES_REQUEST_FILTER_TYPE_OWNER_PROVIDER":   5,
	"LIST_OCM_SHARES_REQUEST_FILTER_TYPE_CREATOR_PROVIDER": 6,
}

func (x ListOCMSharesRequest_Filter_Type) String() string {
	return proto.EnumName(ListOCMSharesRequest_Filter_Type_name, int32(x))
}

func (ListOCMSharesRequest_Filter_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{4, 0, 0}
}

type CreateOCMShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The unique identifier for the shared storage resource.
	ResourceId *v0alpha.ResourceId `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// REQUIRED.
	// The share grant for the share.
	Grant                *ShareGrant `protobuf:"bytes,3,opt,name=grant,proto3" json:"grant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateOCMShareRequest) Reset()         { *m = CreateOCMShareRequest{} }
func (m *CreateOCMShareRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOCMShareRequest) ProtoMessage()    {}
func (*CreateOCMShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{0}
}

func (m *CreateOCMShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOCMShareRequest.Unmarshal(m, b)
}
func (m *CreateOCMShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOCMShareRequest.Marshal(b, m, deterministic)
}
func (m *CreateOCMShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOCMShareRequest.Merge(m, src)
}
func (m *CreateOCMShareRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOCMShareRequest.Size(m)
}
func (m *CreateOCMShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOCMShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOCMShareRequest proto.InternalMessageInfo

func (m *CreateOCMShareRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *CreateOCMShareRequest) GetResourceId() *v0alpha.ResourceId {
	if m != nil {
		return m.ResourceId
	}
	return nil
}

func (m *CreateOCMShareRequest) GetGrant() *ShareGrant {
	if m != nil {
		return m.Grant
	}
	return nil
}

type CreateOCMShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The created share.
	Share                *Share   `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOCMShareResponse) Reset()         { *m = CreateOCMShareResponse{} }
func (m *CreateOCMShareResponse) String() string { return proto.CompactTextString(m) }
func (*CreateOCMShareResponse) ProtoMessage()    {}
func (*CreateOCMShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{1}
}

func (m *CreateOCMShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOCMShareResponse.Unmarshal(m, b)
}
func (m *CreateOCMShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOCMShareResponse.Marshal(b, m, deterministic)
}
func (m *CreateOCMShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOCMShareResponse.Merge(m, src)
}
func (m *CreateOCMShareResponse) XXX_Size() int {
	return xxx_messageInfo_CreateOCMShareResponse.Size(m)
}
func (m *CreateOCMShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOCMShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOCMShareResponse proto.InternalMessageInfo

func (m *CreateOCMShareResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateOCMShareResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *CreateOCMShareResponse) GetShare() *Share {
	if m != nil {
		return m.Share
	}
	return nil
}

type UpdateOCMSharesRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque               *types.Opaque                       `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	Ref                  *ShareReference                     `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Field                *UpdateOCMSharesRequest_UpdateField `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *UpdateOCMSharesRequest) Reset()         { *m = UpdateOCMSharesRequest{} }
func (m *UpdateOCMSharesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOCMSharesRequest) ProtoMessage()    {}
func (*UpdateOCMSharesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{2}
}

func (m *UpdateOCMSharesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOCMSharesRequest.Unmarshal(m, b)
}
func (m *UpdateOCMSharesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOCMSharesRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOCMSharesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOCMSharesRequest.Merge(m, src)
}
func (m *UpdateOCMSharesRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOCMSharesRequest.Size(m)
}
func (m *UpdateOCMSharesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOCMSharesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOCMSharesRequest proto.InternalMessageInfo

func (m *UpdateOCMSharesRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *UpdateOCMSharesRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *UpdateOCMSharesRequest) GetField() *UpdateOCMSharesRequest_UpdateField {
	if m != nil {
		return m.Field
	}
	return nil
}

type UpdateOCMSharesRequest_UpdateField struct {
	// One of the update fields MUST be specified.
	//
	// Types that are valid to be assigned to Field:
	//	*UpdateOCMSharesRequest_UpdateField_Permissions
	//	*UpdateOCMSharesRequest_UpdateField_DisplayName
	Field                isUpdateOCMSharesRequest_UpdateField_Field `protobuf_oneof:"field"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *UpdateOCMSharesRequest_UpdateField) Reset()         { *m = UpdateOCMSharesRequest_UpdateField{} }
func (m *UpdateOCMSharesRequest_UpdateField) String() string { return proto.CompactTextString(m) }
func (*UpdateOCMSharesRequest_UpdateField) ProtoMessage()    {}
func (*UpdateOCMSharesRequest_UpdateField) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{2, 0}
}

func (m *UpdateOCMSharesRequest_UpdateField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOCMSharesRequest_UpdateField.Unmarshal(m, b)
}
func (m *UpdateOCMSharesRequest_UpdateField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOCMSharesRequest_UpdateField.Marshal(b, m, deterministic)
}
func (m *UpdateOCMSharesRequest_UpdateField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOCMSharesRequest_UpdateField.Merge(m, src)
}
func (m *UpdateOCMSharesRequest_UpdateField) XXX_Size() int {
	return xxx_messageInfo_UpdateOCMSharesRequest_UpdateField.Size(m)
}
func (m *UpdateOCMSharesRequest_UpdateField) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOCMSharesRequest_UpdateField.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOCMSharesRequest_UpdateField proto.InternalMessageInfo

type isUpdateOCMSharesRequest_UpdateField_Field interface {
	isUpdateOCMSharesRequest_UpdateField_Field()
}

type UpdateOCMSharesRequest_UpdateField_Permissions struct {
	Permissions *SharePermissions `protobuf:"bytes,2,opt,name=permissions,proto3,oneof"`
}

type UpdateOCMSharesRequest_UpdateField_DisplayName struct {
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3,oneof"`
}

func (*UpdateOCMSharesRequest_UpdateField_Permissions) isUpdateOCMSharesRequest_UpdateField_Field() {}

func (*UpdateOCMSharesRequest_UpdateField_DisplayName) isUpdateOCMSharesRequest_UpdateField_Field() {}

func (m *UpdateOCMSharesRequest_UpdateField) GetField() isUpdateOCMSharesRequest_UpdateField_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *UpdateOCMSharesRequest_UpdateField) GetPermissions() *SharePermissions {
	if x, ok := m.GetField().(*UpdateOCMSharesRequest_UpdateField_Permissions); ok {
		return x.Permissions
	}
	return nil
}

func (m *UpdateOCMSharesRequest_UpdateField) GetDisplayName() string {
	if x, ok := m.GetField().(*UpdateOCMSharesRequest_UpdateField_DisplayName); ok {
		return x.DisplayName
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UpdateOCMSharesRequest_UpdateField) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UpdateOCMSharesRequest_UpdateField_Permissions)(nil),
		(*UpdateOCMSharesRequest_UpdateField_DisplayName)(nil),
	}
}

type UpdateOCMSharesResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UpdateOCMSharesResponse) Reset()         { *m = UpdateOCMSharesResponse{} }
func (m *UpdateOCMSharesResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateOCMSharesResponse) ProtoMessage()    {}
func (*UpdateOCMSharesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{3}
}

func (m *UpdateOCMSharesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOCMSharesResponse.Unmarshal(m, b)
}
func (m *UpdateOCMSharesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOCMSharesResponse.Marshal(b, m, deterministic)
}
func (m *UpdateOCMSharesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOCMSharesResponse.Merge(m, src)
}
func (m *UpdateOCMSharesResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateOCMSharesResponse.Size(m)
}
func (m *UpdateOCMSharesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOCMSharesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOCMSharesResponse proto.InternalMessageInfo

func (m *UpdateOCMSharesResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UpdateOCMSharesResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type ListOCMSharesRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// OPTIONAL.
	// The list of filters to apply if any.
	Filters              []*ListOCMSharesRequest_Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ListOCMSharesRequest) Reset()         { *m = ListOCMSharesRequest{} }
func (m *ListOCMSharesRequest) String() string { return proto.CompactTextString(m) }
func (*ListOCMSharesRequest) ProtoMessage()    {}
func (*ListOCMSharesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{4}
}

func (m *ListOCMSharesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOCMSharesRequest.Unmarshal(m, b)
}
func (m *ListOCMSharesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOCMSharesRequest.Marshal(b, m, deterministic)
}
func (m *ListOCMSharesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOCMSharesRequest.Merge(m, src)
}
func (m *ListOCMSharesRequest) XXX_Size() int {
	return xxx_messageInfo_ListOCMSharesRequest.Size(m)
}
func (m *ListOCMSharesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOCMSharesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOCMSharesRequest proto.InternalMessageInfo

func (m *ListOCMSharesRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *ListOCMSharesRequest) GetFilters() []*ListOCMSharesRequest_Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// represents a filter to apply to the request.
type ListOCMSharesRequest_Filter struct {
	Type ListOCMSharesRequest_Filter_Type `protobuf:"varint,2,opt,name=type,proto3,enum=cs3.ocmshareproviderv0alpha.ListOCMSharesRequest_Filter_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Term:
	//	*ListOCMSharesRequest_Filter_ResourceId
	//	*ListOCMSharesRequest_Filter_Owner
	//	*ListOCMSharesRequest_Filter_Creator
	Term                 isListOCMSharesRequest_Filter_Term `protobuf_oneof:"term"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ListOCMSharesRequest_Filter) Reset()         { *m = ListOCMSharesRequest_Filter{} }
func (m *ListOCMSharesRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*ListOCMSharesRequest_Filter) ProtoMessage()    {}
func (*ListOCMSharesRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{4, 0}
}

func (m *ListOCMSharesRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOCMSharesRequest_Filter.Unmarshal(m, b)
}
func (m *ListOCMSharesRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOCMSharesRequest_Filter.Marshal(b, m, deterministic)
}
func (m *ListOCMSharesRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOCMSharesRequest_Filter.Merge(m, src)
}
func (m *ListOCMSharesRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_ListOCMSharesRequest_Filter.Size(m)
}
func (m *ListOCMSharesRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOCMSharesRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListOCMSharesRequest_Filter proto.InternalMessageInfo

func (m *ListOCMSharesRequest_Filter) GetType() ListOCMSharesRequest_Filter_Type {
	if m != nil {
		return m.Type
	}
	return ListOCMSharesRequest_Filter_LIST_OCM_SHARES_REQUEST_FILTER_TYPE_INVALID
}

type isListOCMSharesRequest_Filter_Term interface {
	isListOCMSharesRequest_Filter_Term()
}

type ListOCMSharesRequest_Filter_ResourceId struct {
	ResourceId *v0alpha.ResourceId `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3,oneof"`
}

type ListOCMSharesRequest_Filter_Owner struct {
	Owner *types.UserId `protobuf:"bytes,4,opt,name=owner,proto3,oneof"`
}

type ListOCMSharesRequest_Filter_Creator struct {
	Creator *types.UserId `protobuf:"bytes,5,opt,name=creator,proto3,oneof"`
}

func (*ListOCMSharesRequest_Filter_ResourceId) isListOCMSharesRequest_Filter_Term() {}

func (*ListOCMSharesRequest_Filter_Owner) isListOCMSharesRequest_Filter_Term() {}

func (*ListOCMSharesRequest_Filter_Creator) isListOCMSharesRequest_Filter_Term() {}

func (m *ListOCMSharesRequest_Filter) GetTerm() isListOCMSharesRequest_Filter_Term {
	if m != nil {
		return m.Term
	}
	return nil
}

func (m *ListOCMSharesRequest_Filter) GetResourceId() *v0alpha.ResourceId {
	if x, ok := m.GetTerm().(*ListOCMSharesRequest_Filter_ResourceId); ok {
		return x.ResourceId
	}
	return nil
}

func (m *ListOCMSharesRequest_Filter) GetOwner() *types.UserId {
	if x, ok := m.GetTerm().(*ListOCMSharesRequest_Filter_Owner); ok {
		return x.Owner
	}
	return nil
}

func (m *ListOCMSharesRequest_Filter) GetCreator() *types.UserId {
	if x, ok := m.GetTerm().(*ListOCMSharesRequest_Filter_Creator); ok {
		return x.Creator
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListOCMSharesRequest_Filter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListOCMSharesRequest_Filter_ResourceId)(nil),
		(*ListOCMSharesRequest_Filter_Owner)(nil),
		(*ListOCMSharesRequest_Filter_Creator)(nil),
	}
}

type ListOCMSharesResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The list of shares.
	Shares               []*Share `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOCMSharesResponse) Reset()         { *m = ListOCMSharesResponse{} }
func (m *ListOCMSharesResponse) String() string { return proto.CompactTextString(m) }
func (*ListOCMSharesResponse) ProtoMessage()    {}
func (*ListOCMSharesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{5}
}

func (m *ListOCMSharesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOCMSharesResponse.Unmarshal(m, b)
}
func (m *ListOCMSharesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOCMSharesResponse.Marshal(b, m, deterministic)
}
func (m *ListOCMSharesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOCMSharesResponse.Merge(m, src)
}
func (m *ListOCMSharesResponse) XXX_Size() int {
	return xxx_messageInfo_ListOCMSharesResponse.Size(m)
}
func (m *ListOCMSharesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOCMSharesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOCMSharesResponse proto.InternalMessageInfo

func (m *ListOCMSharesResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListOCMSharesResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *ListOCMSharesResponse) GetShares() []*Share {
	if m != nil {
		return m.Shares
	}
	return nil
}

type RemoveOCMShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The reference to which the action should be performed.
	Ref                  *ShareReference `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RemoveOCMShareRequest) Reset()         { *m = RemoveOCMShareRequest{} }
func (m *RemoveOCMShareRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveOCMShareRequest) ProtoMessage()    {}
func (*RemoveOCMShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{6}
}

func (m *RemoveOCMShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveOCMShareRequest.Unmarshal(m, b)
}
func (m *RemoveOCMShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveOCMShareRequest.Marshal(b, m, deterministic)
}
func (m *RemoveOCMShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveOCMShareRequest.Merge(m, src)
}
func (m *RemoveOCMShareRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveOCMShareRequest.Size(m)
}
func (m *RemoveOCMShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveOCMShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveOCMShareRequest proto.InternalMessageInfo

func (m *RemoveOCMShareRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *RemoveOCMShareRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

type RemoveOCMShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RemoveOCMShareResponse) Reset()         { *m = RemoveOCMShareResponse{} }
func (m *RemoveOCMShareResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveOCMShareResponse) ProtoMessage()    {}
func (*RemoveOCMShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{7}
}

func (m *RemoveOCMShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveOCMShareResponse.Unmarshal(m, b)
}
func (m *RemoveOCMShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveOCMShareResponse.Marshal(b, m, deterministic)
}
func (m *RemoveOCMShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveOCMShareResponse.Merge(m, src)
}
func (m *RemoveOCMShareResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveOCMShareResponse.Size(m)
}
func (m *RemoveOCMShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveOCMShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveOCMShareResponse proto.InternalMessageInfo

func (m *RemoveOCMShareResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RemoveOCMShareResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type GetOCMShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The reference to which the action should be performed.
	Ref                  *ShareReference `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetOCMShareRequest) Reset()         { *m = GetOCMShareRequest{} }
func (m *GetOCMShareRequest) String() string { return proto.CompactTextString(m) }
func (*GetOCMShareRequest) ProtoMessage()    {}
func (*GetOCMShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{8}
}

func (m *GetOCMShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOCMShareRequest.Unmarshal(m, b)
}
func (m *GetOCMShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOCMShareRequest.Marshal(b, m, deterministic)
}
func (m *GetOCMShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOCMShareRequest.Merge(m, src)
}
func (m *GetOCMShareRequest) XXX_Size() int {
	return xxx_messageInfo_GetOCMShareRequest.Size(m)
}
func (m *GetOCMShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOCMShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOCMShareRequest proto.InternalMessageInfo

func (m *GetOCMShareRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GetOCMShareRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

type GetOCMShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The share.
	Share                *Share   `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOCMShareResponse) Reset()         { *m = GetOCMShareResponse{} }
func (m *GetOCMShareResponse) String() string { return proto.CompactTextString(m) }
func (*GetOCMShareResponse) ProtoMessage()    {}
func (*GetOCMShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{9}
}

func (m *GetOCMShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOCMShareResponse.Unmarshal(m, b)
}
func (m *GetOCMShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOCMShareResponse.Marshal(b, m, deterministic)
}
func (m *GetOCMShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOCMShareResponse.Merge(m, src)
}
func (m *GetOCMShareResponse) XXX_Size() int {
	return xxx_messageInfo_GetOCMShareResponse.Size(m)
}
func (m *GetOCMShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOCMShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOCMShareResponse proto.InternalMessageInfo

func (m *GetOCMShareResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetOCMShareResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GetOCMShareResponse) GetShare() *Share {
	if m != nil {
		return m.Share
	}
	return nil
}

type ListReceivedOCMSharesRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque               *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListReceivedOCMSharesRequest) Reset()         { *m = ListReceivedOCMSharesRequest{} }
func (m *ListReceivedOCMSharesRequest) String() string { return proto.CompactTextString(m) }
func (*ListReceivedOCMSharesRequest) ProtoMessage()    {}
func (*ListReceivedOCMSharesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{10}
}

func (m *ListReceivedOCMSharesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReceivedOCMSharesRequest.Unmarshal(m, b)
}
func (m *ListReceivedOCMSharesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReceivedOCMSharesRequest.Marshal(b, m, deterministic)
}
func (m *ListReceivedOCMSharesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReceivedOCMSharesRequest.Merge(m, src)
}
func (m *ListReceivedOCMSharesRequest) XXX_Size() int {
	return xxx_messageInfo_ListReceivedOCMSharesRequest.Size(m)
}
func (m *ListReceivedOCMSharesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReceivedOCMSharesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListReceivedOCMSharesRequest proto.InternalMessageInfo

func (m *ListReceivedOCMSharesRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type ListReceivedOCMSharesResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The list of received shares.
	Shares               []*ReceivedShare `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListReceivedOCMSharesResponse) Reset()         { *m = ListReceivedOCMSharesResponse{} }
func (m *ListReceivedOCMSharesResponse) String() string { return proto.CompactTextString(m) }
func (*ListReceivedOCMSharesResponse) ProtoMessage()    {}
func (*ListReceivedOCMSharesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{11}
}

func (m *ListReceivedOCMSharesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReceivedOCMSharesResponse.Unmarshal(m, b)
}
func (m *ListReceivedOCMSharesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReceivedOCMSharesResponse.Marshal(b, m, deterministic)
}
func (m *ListReceivedOCMSharesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReceivedOCMSharesResponse.Merge(m, src)
}
func (m *ListReceivedOCMSharesResponse) XXX_Size() int {
	return xxx_messageInfo_ListReceivedOCMSharesResponse.Size(m)
}
func (m *ListReceivedOCMSharesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReceivedOCMSharesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListReceivedOCMSharesResponse proto.InternalMessageInfo

func (m *ListReceivedOCMSharesResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListReceivedOCMSharesResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *ListReceivedOCMSharesResponse) GetShares() []*ReceivedShare {
	if m != nil {
		return m.Shares
	}
	return nil
}

// TODO(labkode): clean up display_name ? we'll use storage links for that.
type UpdateReceivedOCMShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *types.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	Ref                  *ShareReference                            `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Field                *UpdateReceivedOCMShareRequest_UpdateField `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *UpdateReceivedOCMShareRequest) Reset()         { *m = UpdateReceivedOCMShareRequest{} }
func (m *UpdateReceivedOCMShareRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateReceivedOCMShareRequest) ProtoMessage()    {}
func (*UpdateReceivedOCMShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{12}
}

func (m *UpdateReceivedOCMShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReceivedOCMShareRequest.Unmarshal(m, b)
}
func (m *UpdateReceivedOCMShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReceivedOCMShareRequest.Marshal(b, m, deterministic)
}
func (m *UpdateReceivedOCMShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReceivedOCMShareRequest.Merge(m, src)
}
func (m *UpdateReceivedOCMShareRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateReceivedOCMShareRequest.Size(m)
}
func (m *UpdateReceivedOCMShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReceivedOCMShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReceivedOCMShareRequest proto.InternalMessageInfo

func (m *UpdateReceivedOCMShareRequest) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *UpdateReceivedOCMShareRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *UpdateReceivedOCMShareRequest) GetField() *UpdateReceivedOCMShareRequest_UpdateField {
	if m != nil {
		return m.Field
	}
	return nil
}

type UpdateReceivedOCMShareRequest_UpdateField struct {
	// One of the update fields MUST be specified.
	//
	// Types that are valid to be assigned to Field:
	//	*UpdateReceivedOCMShareRequest_UpdateField_DisplayName
	//	*UpdateReceivedOCMShareRequest_UpdateField_State
	Field                isUpdateReceivedOCMShareRequest_UpdateField_Field `protobuf_oneof:"field"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *UpdateReceivedOCMShareRequest_UpdateField) Reset() {
	*m = UpdateReceivedOCMShareRequest_UpdateField{}
}
func (m *UpdateReceivedOCMShareRequest_UpdateField) String() string { return proto.CompactTextString(m) }
func (*UpdateReceivedOCMShareRequest_UpdateField) ProtoMessage()    {}
func (*UpdateReceivedOCMShareRequest_UpdateField) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{12, 0}
}

func (m *UpdateReceivedOCMShareRequest_UpdateField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReceivedOCMShareRequest_UpdateField.Unmarshal(m, b)
}
func (m *UpdateReceivedOCMShareRequest_UpdateField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReceivedOCMShareRequest_UpdateField.Marshal(b, m, deterministic)
}
func (m *UpdateReceivedOCMShareRequest_UpdateField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReceivedOCMShareRequest_UpdateField.Merge(m, src)
}
func (m *UpdateReceivedOCMShareRequest_UpdateField) XXX_Size() int {
	return xxx_messageInfo_UpdateReceivedOCMShareRequest_UpdateField.Size(m)
}
func (m *UpdateReceivedOCMShareRequest_UpdateField) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReceivedOCMShareRequest_UpdateField.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReceivedOCMShareRequest_UpdateField proto.InternalMessageInfo

type isUpdateReceivedOCMShareRequest_UpdateField_Field interface {
	isUpdateReceivedOCMShareRequest_UpdateField_Field()
}

type UpdateReceivedOCMShareRequest_UpdateField_DisplayName struct {
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3,oneof"`
}

type UpdateReceivedOCMShareRequest_UpdateField_State struct {
	State ShareState `protobuf:"varint,2,opt,name=state,proto3,enum=cs3.ocmshareproviderv0alpha.ShareState,oneof"`
}

func (*UpdateReceivedOCMShareRequest_UpdateField_DisplayName) isUpdateReceivedOCMShareRequest_UpdateField_Field() {
}

func (*UpdateReceivedOCMShareRequest_UpdateField_State) isUpdateReceivedOCMShareRequest_UpdateField_Field() {
}

func (m *UpdateReceivedOCMShareRequest_UpdateField) GetField() isUpdateReceivedOCMShareRequest_UpdateField_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *UpdateReceivedOCMShareRequest_UpdateField) GetDisplayName() string {
	if x, ok := m.GetField().(*UpdateReceivedOCMShareRequest_UpdateField_DisplayName); ok {
		return x.DisplayName
	}
	return ""
}

func (m *UpdateReceivedOCMShareRequest_UpdateField) GetState() ShareState {
	if x, ok := m.GetField().(*UpdateReceivedOCMShareRequest_UpdateField_State); ok {
		return x.State
	}
	return ShareState_SHARE_STATE_INVALID
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UpdateReceivedOCMShareRequest_UpdateField) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UpdateReceivedOCMShareRequest_UpdateField_DisplayName)(nil),
		(*UpdateReceivedOCMShareRequest_UpdateField_State)(nil),
	}
}

type UpdateReceivedOCMShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *types.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UpdateReceivedOCMShareResponse) Reset()         { *m = UpdateReceivedOCMShareResponse{} }
func (m *UpdateReceivedOCMShareResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateReceivedOCMShareResponse) ProtoMessage()    {}
func (*UpdateReceivedOCMShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_68ad38c27409e544, []int{13}
}

func (m *UpdateReceivedOCMShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReceivedOCMShareResponse.Unmarshal(m, b)
}
func (m *UpdateReceivedOCMShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReceivedOCMShareResponse.Marshal(b, m, deterministic)
}
func (m *UpdateReceivedOCMShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReceivedOCMShareResponse.Merge(m, src)
}
func (m *UpdateReceivedOCMShareResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateReceivedOCMShareResponse.Size(m)
}
func (m *UpdateReceivedOCMShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReceivedOCMShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReceivedOCMShareResponse proto.InternalMessageInfo

func (m *UpdateReceivedOCMShareResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UpdateReceivedOCMShareResponse) GetOpaque() *types.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func init() {
	proto.RegisterEnum("cs3.ocmshareproviderv0alpha.ListOCMSharesRequest_Filter_Type", ListOCMSharesRequest_Filter_Type_name, ListOCMSharesRequest_Filter_Type_value)
	proto.RegisterType((*CreateOCMShareRequest)(nil), "cs3.ocmshareproviderv0alpha.CreateOCMShareRequest")
	proto.RegisterType((*CreateOCMShareResponse)(nil), "cs3.ocmshareproviderv0alpha.CreateOCMShareResponse")
	proto.RegisterType((*UpdateOCMSharesRequest)(nil), "cs3.ocmshareproviderv0alpha.UpdateOCMSharesRequest")
	proto.RegisterType((*UpdateOCMSharesRequest_UpdateField)(nil), "cs3.ocmshareproviderv0alpha.UpdateOCMSharesRequest.UpdateField")
	proto.RegisterType((*UpdateOCMSharesResponse)(nil), "cs3.ocmshareproviderv0alpha.UpdateOCMSharesResponse")
	proto.RegisterType((*ListOCMSharesRequest)(nil), "cs3.ocmshareproviderv0alpha.ListOCMSharesRequest")
	proto.RegisterType((*ListOCMSharesRequest_Filter)(nil), "cs3.ocmshareproviderv0alpha.ListOCMSharesRequest.Filter")
	proto.RegisterType((*ListOCMSharesResponse)(nil), "cs3.ocmshareproviderv0alpha.ListOCMSharesResponse")
	proto.RegisterType((*RemoveOCMShareRequest)(nil), "cs3.ocmshareproviderv0alpha.RemoveOCMShareRequest")
	proto.RegisterType((*RemoveOCMShareResponse)(nil), "cs3.ocmshareproviderv0alpha.RemoveOCMShareResponse")
	proto.RegisterType((*GetOCMShareRequest)(nil), "cs3.ocmshareproviderv0alpha.GetOCMShareRequest")
	proto.RegisterType((*GetOCMShareResponse)(nil), "cs3.ocmshareproviderv0alpha.GetOCMShareResponse")
	proto.RegisterType((*ListReceivedOCMSharesRequest)(nil), "cs3.ocmshareproviderv0alpha.ListReceivedOCMSharesRequest")
	proto.RegisterType((*ListReceivedOCMSharesResponse)(nil), "cs3.ocmshareproviderv0alpha.ListReceivedOCMSharesResponse")
	proto.RegisterType((*UpdateReceivedOCMShareRequest)(nil), "cs3.ocmshareproviderv0alpha.UpdateReceivedOCMShareRequest")
	proto.RegisterType((*UpdateReceivedOCMShareRequest_UpdateField)(nil), "cs3.ocmshareproviderv0alpha.UpdateReceivedOCMShareRequest.UpdateField")
	proto.RegisterType((*UpdateReceivedOCMShareResponse)(nil), "cs3.ocmshareproviderv0alpha.UpdateReceivedOCMShareResponse")
}

func init() {
	proto.RegisterFile("cs3/ocmshareprovider/v0alpha/ocmshareprovider.proto", fileDescriptor_68ad38c27409e544)
}

var fileDescriptor_68ad38c27409e544 = []byte{
	// 1034 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xae, 0xf3, 0x57, 0x71, 0x02, 0xdd, 0x30, 0xb4, 0xdd, 0xe0, 0x65, 0x01, 0x19, 0x89, 0xdd,
	0x52, 0xea, 0x74, 0x93, 0x15, 0x2a, 0x45, 0xd5, 0xaa, 0x49, 0xdd, 0x36, 0x52, 0xb7, 0x4e, 0x27,
	0x49, 0xf9, 0xd1, 0x4a, 0x96, 0xd7, 0x99, 0xee, 0x5a, 0x4a, 0x62, 0xef, 0x8c, 0x1b, 0x14, 0x69,
	0x85, 0xc4, 0x0b, 0xac, 0x84, 0xc4, 0x25, 0x57, 0x20, 0x01, 0xe2, 0x05, 0x78, 0x87, 0x7d, 0x0f,
	0x6e, 0xb8, 0xe3, 0x9e, 0x0b, 0x34, 0xf6, 0x84, 0x26, 0xce, 0x9f, 0x93, 0x2a, 0xb0, 0x37, 0x55,
	0x7b, 0xe6, 0x7c, 0xdf, 0xf9, 0xce, 0x78, 0xfc, 0xcd, 0x71, 0xa1, 0x60, 0xb1, 0x42, 0xce, 0xb1,
	0x5a, 0xec, 0xa9, 0x49, 0x89, 0x4b, 0x9d, 0x8e, 0xdd, 0x20, 0x34, 0xd7, 0xd9, 0x36, 0x9b, 0xee,
	0x53, 0x73, 0x68, 0x41, 0x75, 0xa9, 0xe3, 0x39, 0xe8, 0x96, 0xc5, 0x0a, 0x6a, 0x78, 0x4d, 0x60,
	0xe4, 0x8f, 0x27, 0x32, 0x52, 0xc2, 0x9c, 0x4b, 0x6a, 0x11, 0x16, 0x50, 0xc9, 0xab, 0x3c, 0x9b,
	0xba, 0x56, 0x8e, 0x79, 0xa6, 0x77, 0xd9, 0x8b, 0x6e, 0xf2, 0x28, 0xf3, 0x1c, 0x6a, 0x3e, 0x99,
	0x4e, 0xb1, 0xc6, 0x93, 0xbd, 0xae, 0x4b, 0x58, 0xf0, 0x33, 0x08, 0x2b, 0x2f, 0x25, 0x58, 0x2b,
	0x51, 0x62, 0x7a, 0x44, 0x2f, 0x3d, 0xac, 0x72, 0x31, 0x98, 0x3c, 0xbb, 0x24, 0xcc, 0x43, 0x1b,
	0x90, 0x72, 0x5c, 0xf3, 0xd9, 0x25, 0xc9, 0x4a, 0xef, 0x4b, 0x77, 0xd3, 0xf9, 0x37, 0x55, 0xde,
	0x4f, 0x80, 0xd5, 0xfd, 0x05, 0x2c, 0x12, 0xd0, 0x11, 0xa4, 0x7b, 0xe5, 0x0c, 0xbb, 0x91, 0x8d,
	0xf9, 0xf9, 0x1f, 0xfa, 0xf9, 0x21, 0x79, 0x42, 0x9d, 0x8a, 0x45, 0x7a, 0xb9, 0x81, 0x81, 0xfe,
	0xfb, 0x3b, 0xda, 0x83, 0xe4, 0x13, 0x6a, 0xb6, 0xbd, 0x6c, 0xdc, 0xa7, 0xb8, 0xa3, 0x4e, 0xd8,
	0x42, 0xd5, 0x57, 0x7b, 0xc4, 0xd3, 0x71, 0x80, 0x52, 0x7e, 0x96, 0x60, 0x3d, 0xdc, 0x0c, 0x73,
	0x9d, 0x36, 0x23, 0xe8, 0x0e, 0xa4, 0x82, 0xbd, 0x13, 0xdd, 0xdc, 0xf0, 0xa9, 0xa9, 0x6b, 0xa9,
	0x55, 0x3f, 0x8c, 0xc5, 0x72, 0x5f, 0xdb, 0xb1, 0x69, 0x6d, 0xef, 0x40, 0xd2, 0x17, 0x26, 0xd4,
	0x2a, 0xd3, 0xd5, 0xe2, 0x00, 0xa0, 0xfc, 0x19, 0x83, 0xf5, 0xba, 0xdb, 0xe8, 0x13, 0xca, 0xe6,
	0xd8, 0xf6, 0x3d, 0x88, 0x53, 0x72, 0x21, 0x74, 0x6e, 0x46, 0xa8, 0x4e, 0x2e, 0x08, 0x25, 0x6d,
	0x8b, 0x60, 0x8e, 0x43, 0x75, 0x48, 0x5e, 0xd8, 0xa4, 0xd9, 0x10, 0xf2, 0x1f, 0x4c, 0x24, 0x18,
	0xad, 0x56, 0x84, 0x0f, 0x39, 0x0d, 0x0e, 0xd8, 0xe4, 0x17, 0x12, 0xa4, 0xfb, 0xc2, 0xe8, 0x0c,
	0xd2, 0x2e, 0xa1, 0x2d, 0x9b, 0x31, 0xdb, 0x69, 0x33, 0xa1, 0x76, 0x6b, 0xba, 0xda, 0xca, 0x15,
	0xe8, 0x78, 0x09, 0xf7, 0x73, 0xa0, 0x0f, 0xe0, 0xf5, 0x86, 0xcd, 0xdc, 0xa6, 0xd9, 0x35, 0xda,
	0x66, 0x2b, 0xd8, 0xff, 0xd7, 0x78, 0x92, 0x88, 0x9e, 0x9a, 0x2d, 0x52, 0x5c, 0x16, 0xed, 0x29,
	0x2d, 0xb8, 0x39, 0xa4, 0x7e, 0x71, 0xa7, 0x42, 0xf9, 0x3e, 0x05, 0xab, 0x27, 0x36, 0xf3, 0xae,
	0xf3, 0x64, 0x31, 0x2c, 0x5f, 0xd8, 0x4d, 0x8f, 0x50, 0xbe, 0x5f, 0xf1, 0xbb, 0xe9, 0xfc, 0xce,
	0xc4, 0xfd, 0x1a, 0x55, 0x4e, 0x3d, 0xf4, 0x09, 0x70, 0x8f, 0x48, 0xfe, 0x3b, 0x01, 0xa9, 0x20,
	0x86, 0xce, 0x20, 0xc1, 0xcb, 0xfa, 0xbd, 0xac, 0xe4, 0xf7, 0xe6, 0xe5, 0x56, 0x6b, 0x5d, 0x97,
	0x60, 0x9f, 0x0a, 0x95, 0x07, 0x2d, 0x20, 0x3e, 0x8b, 0x05, 0x1c, 0x2f, 0x0d, 0x98, 0xc0, 0x06,
	0x24, 0x9d, 0xaf, 0xdb, 0x84, 0x66, 0x13, 0x43, 0xdb, 0x54, 0x67, 0x84, 0xfa, 0xf9, 0x41, 0x06,
	0xda, 0x82, 0x65, 0x8b, 0xbf, 0xef, 0x0e, 0xcd, 0x26, 0xc7, 0x27, 0xf7, 0x72, 0x94, 0xbf, 0x62,
	0x90, 0xe0, 0x9a, 0x51, 0x0e, 0x36, 0x4f, 0xca, 0xd5, 0x9a, 0xa1, 0x97, 0x1e, 0x1a, 0xd5, 0xe3,
	0x7d, 0xac, 0x55, 0x0d, 0xac, 0x9d, 0xd5, 0xb5, 0x6a, 0xcd, 0x38, 0x2c, 0x9f, 0xd4, 0x34, 0x6c,
	0xd4, 0xbe, 0xac, 0x68, 0x46, 0xf9, 0xf4, 0x7c, 0xff, 0xa4, 0x7c, 0x90, 0x59, 0x42, 0xf7, 0x60,
	0x2b, 0x0a, 0xe0, 0x54, 0x17, 0x7f, 0x66, 0x24, 0x54, 0x80, 0x5c, 0x14, 0x08, 0xd6, 0xaa, 0x7a,
	0x1d, 0x97, 0x34, 0xa3, 0x7c, 0x90, 0x89, 0xa1, 0x2d, 0xd8, 0x88, 0x02, 0xd2, 0x3f, 0x3f, 0xd5,
	0x70, 0x26, 0x1e, 0xb5, 0x8f, 0x12, 0xd6, 0xf6, 0x6b, 0x3a, 0xce, 0x24, 0xd0, 0x27, 0x90, 0x8f,
	0xcc, 0x6f, 0x54, 0xb0, 0x7e, 0x5e, 0x3e, 0xd0, 0x70, 0x26, 0x89, 0x76, 0xe0, 0xfe, 0x0c, 0x85,
	0xae, 0x90, 0xa9, 0x62, 0x0a, 0x12, 0x1e, 0xa1, 0x2d, 0xe5, 0x17, 0x09, 0xd6, 0x42, 0x67, 0x69,
	0x81, 0xd6, 0xbc, 0x0b, 0x29, 0xff, 0x34, 0xb3, 0x6c, 0xdc, 0x7f, 0x7f, 0xa2, 0x78, 0xb3, 0x40,
	0x28, 0xdf, 0x4a, 0xb0, 0x86, 0x49, 0xcb, 0xe9, 0x5c, 0xe7, 0x4a, 0xbc, 0x9e, 0x37, 0x2b, 0x4d,
	0x58, 0x0f, 0x4b, 0x58, 0xa0, 0x65, 0x7d, 0x03, 0xe8, 0x88, 0x78, 0xff, 0x5f, 0xb7, 0x3f, 0x49,
	0xf0, 0xd6, 0x80, 0x80, 0x57, 0xf2, 0xd2, 0x2e, 0xc3, 0x3b, 0xfc, 0x00, 0x63, 0x62, 0x11, 0xbb,
	0x43, 0x1a, 0xd7, 0xf0, 0x77, 0xe5, 0x77, 0x09, 0x6e, 0x8f, 0xe1, 0x5a, 0x60, 0xeb, 0xc5, 0xd0,
	0x4b, 0xf1, 0xd1, 0xc4, 0xde, 0x7b, 0xda, 0x06, 0x5f, 0x8e, 0x3f, 0x62, 0x70, 0x3b, 0xb8, 0x4d,
	0xc3, 0xda, 0xff, 0xfb, 0x01, 0xe6, 0xd1, 0xe0, 0x00, 0x73, 0x18, 0x61, 0x80, 0x19, 0x23, 0x7a,
	0xd4, 0x1c, 0xf3, 0x7c, 0x70, 0x8c, 0x09, 0xcf, 0x1c, 0xd2, 0x88, 0x99, 0x03, 0x3d, 0x80, 0x24,
	0x7f, 0x2c, 0xbd, 0x9b, 0x35, 0xc2, 0xfc, 0xca, 0x9f, 0x26, 0xe1, 0x17, 0x9a, 0x8f, 0xbb, 0x1a,
	0x5a, 0x3c, 0x78, 0x77, 0x9c, 0xe2, 0xc5, 0x9d, 0x90, 0xfc, 0x0f, 0xcb, 0x70, 0xb3, 0x57, 0xa8,
	0x22, 0xe4, 0x56, 0x09, 0xed, 0xd8, 0x16, 0x41, 0x5d, 0x58, 0x19, 0x9c, 0xad, 0x51, 0x7e, 0x62,
	0x7b, 0x23, 0xbf, 0x2a, 0xe4, 0xc2, 0x4c, 0x18, 0xd1, 0x6a, 0x17, 0x56, 0x06, 0xdd, 0x70, 0x4a,
	0xe9, 0x91, 0xee, 0x3d, 0xa5, 0xf4, 0x18, 0xbb, 0x75, 0x21, 0xdd, 0xe7, 0x4c, 0x28, 0x37, 0x91,
	0x63, 0xd8, 0x44, 0xe5, 0xed, 0xe8, 0x00, 0x51, 0xb1, 0x03, 0x6f, 0x0c, 0xdc, 0x93, 0xe8, 0xde,
	0xcc, 0xf3, 0x99, 0x9c, 0x9f, 0x05, 0x22, 0xea, 0x3e, 0x87, 0x1b, 0xa1, 0x31, 0x19, 0x15, 0xe6,
	0xf8, 0x24, 0x90, 0xef, 0xcf, 0x06, 0x12, 0xd5, 0x5f, 0x88, 0xf1, 0x60, 0xc8, 0x11, 0xd1, 0xa7,
	0x53, 0x7b, 0x19, 0xe7, 0xc8, 0xf2, 0xee, 0x3c, 0x50, 0x21, 0xe8, 0x3b, 0xa9, 0xf7, 0x89, 0x16,
	0xce, 0x41, 0xbb, 0xf3, 0x1b, 0x8d, 0xfc, 0xd9, 0x5c, 0xd8, 0x40, 0x53, 0xf1, 0x57, 0x09, 0xde,
	0xb3, 0x9c, 0xd6, 0x24, 0x8a, 0xe2, 0x9a, 0x1e, 0x5a, 0xa8, 0xf0, 0xef, 0xfc, 0x8a, 0xf4, 0xd5,
	0xdb, 0x63, 0x10, 0xee, 0xe3, 0x1f, 0x63, 0xab, 0xa5, 0xa2, 0xfe, 0x05, 0x2f, 0xc7, 0x47, 0xbb,
	0xde, 0xf0, 0xf6, 0x5b, 0xec, 0x56, 0xa9, 0x5a, 0x50, 0xc3, 0x7e, 0x70, 0xbe, 0xbd, 0xcf, 0x61,
	0x2f, 0xfd, 0xd5, 0x47, 0x63, 0x56, 0x1f, 0xa7, 0xfc, 0x7f, 0x2f, 0x14, 0xfe, 0x09, 0x00, 0x00,
	0xff, 0xff, 0x77, 0x7a, 0xf5, 0xd4, 0x3a, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OCMShareProviderServiceClient is the client API for OCMShareProviderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OCMShareProviderServiceClient interface {
	// Creates a new share.
	// MUST return CODE_NOT_FOUND if the resource reference does not exist.
	// MUST return CODE_ALREADY_EXISTS if the share already exists for the 4-tuple consisting of
	// (owner, shared_resource, grantee).
	// New shares MUST be created in the state SHARE_STATE_PENDING.
	CreateOCMShare(ctx context.Context, in *CreateOCMShareRequest, opts ...grpc.CallOption) (*CreateOCMShareResponse, error)
	// Removes a share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	RemoveOCMShare(ctx context.Context, in *RemoveOCMShareRequest, opts ...grpc.CallOption) (*RemoveOCMShareResponse, error)
	// Gets share information for a single share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	GetOCMShare(ctx context.Context, in *GetOCMShareRequest, opts ...grpc.CallOption) (*GetOCMShareResponse, error)
	// List the shares the authenticated principal has created,
	// both as owner and creator. If a filter is specified, only
	// shares satisfying the filter MUST be returned.
	ListOCMShares(ctx context.Context, in *ListOCMSharesRequest, opts ...grpc.CallOption) (*ListOCMSharesResponse, error)
	// Updates a share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	UpdateOCMShares(ctx context.Context, in *UpdateOCMSharesRequest, opts ...grpc.CallOption) (*UpdateOCMSharesResponse, error)
	// List all shares the authenticated principal has received.
	ListReceivedOCMShares(ctx context.Context, in *ListReceivedOCMSharesRequest, opts ...grpc.CallOption) (*ListReceivedOCMSharesResponse, error)
	// Update the received share to change the share state or the display name.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	UpdateReceivedOCMShare(ctx context.Context, in *UpdateReceivedOCMShareRequest, opts ...grpc.CallOption) (*UpdateReceivedOCMShareResponse, error)
}

type oCMShareProviderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOCMShareProviderServiceClient(cc *grpc.ClientConn) OCMShareProviderServiceClient {
	return &oCMShareProviderServiceClient{cc}
}

func (c *oCMShareProviderServiceClient) CreateOCMShare(ctx context.Context, in *CreateOCMShareRequest, opts ...grpc.CallOption) (*CreateOCMShareResponse, error) {
	out := new(CreateOCMShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/CreateOCMShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oCMShareProviderServiceClient) RemoveOCMShare(ctx context.Context, in *RemoveOCMShareRequest, opts ...grpc.CallOption) (*RemoveOCMShareResponse, error) {
	out := new(RemoveOCMShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/RemoveOCMShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oCMShareProviderServiceClient) GetOCMShare(ctx context.Context, in *GetOCMShareRequest, opts ...grpc.CallOption) (*GetOCMShareResponse, error) {
	out := new(GetOCMShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/GetOCMShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oCMShareProviderServiceClient) ListOCMShares(ctx context.Context, in *ListOCMSharesRequest, opts ...grpc.CallOption) (*ListOCMSharesResponse, error) {
	out := new(ListOCMSharesResponse)
	err := c.cc.Invoke(ctx, "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/ListOCMShares", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oCMShareProviderServiceClient) UpdateOCMShares(ctx context.Context, in *UpdateOCMSharesRequest, opts ...grpc.CallOption) (*UpdateOCMSharesResponse, error) {
	out := new(UpdateOCMSharesResponse)
	err := c.cc.Invoke(ctx, "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/UpdateOCMShares", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oCMShareProviderServiceClient) ListReceivedOCMShares(ctx context.Context, in *ListReceivedOCMSharesRequest, opts ...grpc.CallOption) (*ListReceivedOCMSharesResponse, error) {
	out := new(ListReceivedOCMSharesResponse)
	err := c.cc.Invoke(ctx, "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/ListReceivedOCMShares", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oCMShareProviderServiceClient) UpdateReceivedOCMShare(ctx context.Context, in *UpdateReceivedOCMShareRequest, opts ...grpc.CallOption) (*UpdateReceivedOCMShareResponse, error) {
	out := new(UpdateReceivedOCMShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/UpdateReceivedOCMShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OCMShareProviderServiceServer is the server API for OCMShareProviderService service.
type OCMShareProviderServiceServer interface {
	// Creates a new share.
	// MUST return CODE_NOT_FOUND if the resource reference does not exist.
	// MUST return CODE_ALREADY_EXISTS if the share already exists for the 4-tuple consisting of
	// (owner, shared_resource, grantee).
	// New shares MUST be created in the state SHARE_STATE_PENDING.
	CreateOCMShare(context.Context, *CreateOCMShareRequest) (*CreateOCMShareResponse, error)
	// Removes a share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	RemoveOCMShare(context.Context, *RemoveOCMShareRequest) (*RemoveOCMShareResponse, error)
	// Gets share information for a single share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	GetOCMShare(context.Context, *GetOCMShareRequest) (*GetOCMShareResponse, error)
	// List the shares the authenticated principal has created,
	// both as owner and creator. If a filter is specified, only
	// shares satisfying the filter MUST be returned.
	ListOCMShares(context.Context, *ListOCMSharesRequest) (*ListOCMSharesResponse, error)
	// Updates a share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	UpdateOCMShares(context.Context, *UpdateOCMSharesRequest) (*UpdateOCMSharesResponse, error)
	// List all shares the authenticated principal has received.
	ListReceivedOCMShares(context.Context, *ListReceivedOCMSharesRequest) (*ListReceivedOCMSharesResponse, error)
	// Update the received share to change the share state or the display name.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	UpdateReceivedOCMShare(context.Context, *UpdateReceivedOCMShareRequest) (*UpdateReceivedOCMShareResponse, error)
}

// UnimplementedOCMShareProviderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOCMShareProviderServiceServer struct {
}

func (*UnimplementedOCMShareProviderServiceServer) CreateOCMShare(ctx context.Context, req *CreateOCMShareRequest) (*CreateOCMShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOCMShare not implemented")
}
func (*UnimplementedOCMShareProviderServiceServer) RemoveOCMShare(ctx context.Context, req *RemoveOCMShareRequest) (*RemoveOCMShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveOCMShare not implemented")
}
func (*UnimplementedOCMShareProviderServiceServer) GetOCMShare(ctx context.Context, req *GetOCMShareRequest) (*GetOCMShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOCMShare not implemented")
}
func (*UnimplementedOCMShareProviderServiceServer) ListOCMShares(ctx context.Context, req *ListOCMSharesRequest) (*ListOCMSharesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOCMShares not implemented")
}
func (*UnimplementedOCMShareProviderServiceServer) UpdateOCMShares(ctx context.Context, req *UpdateOCMSharesRequest) (*UpdateOCMSharesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOCMShares not implemented")
}
func (*UnimplementedOCMShareProviderServiceServer) ListReceivedOCMShares(ctx context.Context, req *ListReceivedOCMSharesRequest) (*ListReceivedOCMSharesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListReceivedOCMShares not implemented")
}
func (*UnimplementedOCMShareProviderServiceServer) UpdateReceivedOCMShare(ctx context.Context, req *UpdateReceivedOCMShareRequest) (*UpdateReceivedOCMShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReceivedOCMShare not implemented")
}

func RegisterOCMShareProviderServiceServer(s *grpc.Server, srv OCMShareProviderServiceServer) {
	s.RegisterService(&_OCMShareProviderService_serviceDesc, srv)
}

func _OCMShareProviderService_CreateOCMShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOCMShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OCMShareProviderServiceServer).CreateOCMShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/CreateOCMShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OCMShareProviderServiceServer).CreateOCMShare(ctx, req.(*CreateOCMShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OCMShareProviderService_RemoveOCMShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveOCMShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OCMShareProviderServiceServer).RemoveOCMShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/RemoveOCMShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OCMShareProviderServiceServer).RemoveOCMShare(ctx, req.(*RemoveOCMShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OCMShareProviderService_GetOCMShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOCMShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OCMShareProviderServiceServer).GetOCMShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/GetOCMShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OCMShareProviderServiceServer).GetOCMShare(ctx, req.(*GetOCMShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OCMShareProviderService_ListOCMShares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOCMSharesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OCMShareProviderServiceServer).ListOCMShares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/ListOCMShares",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OCMShareProviderServiceServer).ListOCMShares(ctx, req.(*ListOCMSharesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OCMShareProviderService_UpdateOCMShares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOCMSharesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OCMShareProviderServiceServer).UpdateOCMShares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/UpdateOCMShares",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OCMShareProviderServiceServer).UpdateOCMShares(ctx, req.(*UpdateOCMSharesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OCMShareProviderService_ListReceivedOCMShares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReceivedOCMSharesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OCMShareProviderServiceServer).ListReceivedOCMShares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/ListReceivedOCMShares",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OCMShareProviderServiceServer).ListReceivedOCMShares(ctx, req.(*ListReceivedOCMSharesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OCMShareProviderService_UpdateReceivedOCMShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReceivedOCMShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OCMShareProviderServiceServer).UpdateReceivedOCMShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.ocmshareproviderv0alpha.OCMShareProviderService/UpdateReceivedOCMShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OCMShareProviderServiceServer).UpdateReceivedOCMShare(ctx, req.(*UpdateReceivedOCMShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OCMShareProviderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cs3.ocmshareproviderv0alpha.OCMShareProviderService",
	HandlerType: (*OCMShareProviderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOCMShare",
			Handler:    _OCMShareProviderService_CreateOCMShare_Handler,
		},
		{
			MethodName: "RemoveOCMShare",
			Handler:    _OCMShareProviderService_RemoveOCMShare_Handler,
		},
		{
			MethodName: "GetOCMShare",
			Handler:    _OCMShareProviderService_GetOCMShare_Handler,
		},
		{
			MethodName: "ListOCMShares",
			Handler:    _OCMShareProviderService_ListOCMShares_Handler,
		},
		{
			MethodName: "UpdateOCMShares",
			Handler:    _OCMShareProviderService_UpdateOCMShares_Handler,
		},
		{
			MethodName: "ListReceivedOCMShares",
			Handler:    _OCMShareProviderService_ListReceivedOCMShares_Handler,
		},
		{
			MethodName: "UpdateReceivedOCMShare",
			Handler:    _OCMShareProviderService_UpdateReceivedOCMShare_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cs3/ocmshareprovider/v0alpha/ocmshareprovider.proto",
}
